{"name": "test_register_without_any_input", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='input-firstname']/following-sibling::div\"}\n  (Session info: chrome=126.0.6478.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7C09BEEA2+31554]\n\t(No symbol) [0x00007FF7C0937ED9]\n\t(No symbol) [0x00007FF7C07F872A]\n\t(No symbol) [0x00007FF7C0848434]\n\t(No symbol) [0x00007FF7C084853C]\n\t(No symbol) [0x00007FF7C088F6A7]\n\t(No symbol) [0x00007FF7C086D06F]\n\t(No symbol) [0x00007FF7C088C977]\n\t(No symbol) [0x00007FF7C086CDD3]\n\t(No symbol) [0x00007FF7C083A33B]\n\t(No symbol) [0x00007FF7C083AED1]\n\tGetHandleVerifier [0x00007FF7C0CC8B1D+3217341]\n\tGetHandleVerifier [0x00007FF7C0D15AE3+3532675]\n\tGetHandleVerifier [0x00007FF7C0D0B0E0+3489152]\n\tGetHandleVerifier [0x00007FF7C0A6E776+750614]\n\t(No symbol) [0x00007FF7C094375F]\n\t(No symbol) [0x00007FF7C093EB14]\n\t(No symbol) [0x00007FF7C093ECA2]\n\t(No symbol) [0x00007FF7C092E16F]\n\tBaseThreadInitThunk [0x00007FFD037A257D+29]\n\tRtlUserThreadStart [0x00007FFD0426AA48+40]", "trace": "self = <tests.test_Register.TestRegister object at 0x000002005C4BC770>\n\n    def test_register_without_any_input(self):\n        home_page = HomePage(self.driver)\n        register_page = home_page.navigate_to_register_page()\n        account_success_page = register_page.register_an_account(\"\", \"\", \"\", \"\", \"\", \"\", \"\", \"\")\n>       assert register_page.verify_all_warnings(\"Warning: You must agree to the Privacy Policy!\",\n                                                 \"First Name must be between 1 and 32 characters!\",\n                                                 \"Last Name must be between 1 and 32 characters!\",\n                                                 \"E-Mail Address does not appear to be valid!\",\n                                                 \"Telephone must be between 3 and 32 characters!\",\n                                                 \"Password must be between 4 and 20 characters!\")\n\ntests\\test_Register.py:45: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npages\\RegisterPage.py:94: in verify_all_warnings\n    actual_first_name_warning_message = self.retrieve_first_name_warning()\npages\\RegisterPage.py:76: in retrieve_first_name_warning\n    return self.get_element_text(self.first_name_warning_xpath)\npages\\BasePage.py:51: in get_element_text\n    return self.get_element(locator).text\npages\\BasePage.py:19: in get_element\n    return self.driver.find_element(*locator)\nC:\\Users\\rjman\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nC:\\Users\\rjman\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002005C8289E0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF7C092E16F]\\\\n\\\\tBaseThreadInitThunk [0x00007FFD037A257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFD0426AA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@id='input-firstname']/following-sibling::div\"}\nE         (Session info: chrome=126.0.6478.127); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7C09BEEA2+31554]\nE       \t(No symbol) [0x00007FF7C0937ED9]\nE       \t(No symbol) [0x00007FF7C07F872A]\nE       \t(No symbol) [0x00007FF7C0848434]\nE       \t(No symbol) [0x00007FF7C084853C]\nE       \t(No symbol) [0x00007FF7C088F6A7]\nE       \t(No symbol) [0x00007FF7C086D06F]\nE       \t(No symbol) [0x00007FF7C088C977]\nE       \t(No symbol) [0x00007FF7C086CDD3]\nE       \t(No symbol) [0x00007FF7C083A33B]\nE       \t(No symbol) [0x00007FF7C083AED1]\nE       \tGetHandleVerifier [0x00007FF7C0CC8B1D+3217341]\nE       \tGetHandleVerifier [0x00007FF7C0D15AE3+3532675]\nE       \tGetHandleVerifier [0x00007FF7C0D0B0E0+3489152]\nE       \tGetHandleVerifier [0x00007FF7C0A6E776+750614]\nE       \t(No symbol) [0x00007FF7C094375F]\nE       \t(No symbol) [0x00007FF7C093EB14]\nE       \t(No symbol) [0x00007FF7C093ECA2]\nE       \t(No symbol) [0x00007FF7C092E16F]\nE       \tBaseThreadInitThunk [0x00007FFD037A257D+29]\nE       \tRtlUserThreadStart [0x00007FFD0426AA48+40]\n\nC:\\Users\\rjman\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1720634323365, "stop": 1720634329318, "uuid": "db067dd2-1461-4fcb-903f-61ae6f237f4f", "historyId": "ed707dfe9eb4fbf46fbd97b9c0df71da", "testCaseId": "ed707dfe9eb4fbf46fbd97b9c0df71da", "fullName": "tests.test_Register.TestRegister#test_register_without_any_input", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup_and_teardown', 'log_on_failure')"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_Register"}, {"name": "subSuite", "value": "TestRegister"}, {"name": "host", "value": "Manik"}, {"name": "thread", "value": "10028-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_Register"}]}